SinglyLinkedListNode* mergeLists(SinglyLinkedListNode* head1, SinglyLinkedListNode* head2) {
    // base result of nothing in case both empty
    SinglyLinkedListNode* result = NULL;
    
    // no list 1, return the other
    if (head1 == NULL) {
        return head2;
    }
    // no list 2, return the other
    else if (head2 == NULL) {
        return head1;
    }
    
    // if 1 is less than 2
    if (head1->data <= head2->data) {
        // thats the first one
        result = head1;
        // next will be recurse of what came after compared
        result->next = mergeLists(head1->next, head2);
    }
    else {
        result = head2;
        result->next = mergeLists(head1, head2->next);
    }

    return result;
}
